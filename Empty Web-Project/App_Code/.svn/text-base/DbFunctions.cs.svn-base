using System;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.IO;
using NewDAL;
using System.Security.Cryptography;
using System.Text;


/// <summary>
/// Summary description for DbFunctions
/// </summary>
public class DbFunctions : Base
{
    DbConnection objCon;

    SqlCommand com;
    SqlDataAdapter da;
    public SqlDataReader dr;
    DataSet ds;
    public DbFunctions()
    {

        objCon = new DbConnection();

    }
    ~DbFunctions()
    {
        base.Dispose();
       // this.Dispose();
    }
    public string decrypt(string val, string seed)
    {
        byte[] KEY_64 = Convert.FromBase64String(seed);
        byte[] IV_64 = { 55, 103, 246, 79, 36, 99, 167, 3 };
            DESCryptoServiceProvider cryptoProvider = new DESCryptoServiceProvider();
            byte[] buffer = Convert.FromBase64String(val);
            MemoryStream ms = new MemoryStream(buffer);
            CryptoStream cs = new CryptoStream(ms, cryptoProvider.CreateDecryptor(KEY_64, IV_64), CryptoStreamMode.Read);
        StreamReader sr = new StreamReader(cs);
        return sr.ReadToEnd();
    }
    public string ValidateUserLogin(string sql)
    {
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        string UserName = com.ExecuteScalar().ToString();
        com.Connection.Close();
        return UserName;
    }
    public byte[] CreateSalt(int size)
    {
        RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();
        byte[] buff = new byte[size];
        rng.GetBytes(buff);
        return buff;
    }
    public string encrypt(string Text, byte[] Key)
    {
        byte[] KEY_64 = null;
        KEY_64 = Key;
        byte[] IV_64 = { 55, 103, 246, 79, 36, 99, 167, 3 };
        if (Text != string.Empty)
        {
            DESCryptoServiceProvider cryptoProvider = new DESCryptoServiceProvider();
            MemoryStream ms = new MemoryStream();
            CryptoStream cs = new CryptoStream(ms, cryptoProvider.CreateEncryptor(KEY_64, IV_64), CryptoStreamMode.Write);
            StreamWriter sw = new StreamWriter(cs);
            sw.Write(Text);
            sw.Flush();
            cs.FlushFinalBlock();
            ms.Flush();
            return Convert.ToBase64String(ms.GetBuffer(), 0, Convert.ToInt32(ms.Length));
        }
        else
        {
            return "";

        }
    }
    public void controlButton(Button cmdI, Button cmdU, string perm)
    {
        char[] separator = new char[] { '|' };
        string[] arr = perm.Split(separator);
        if (cmdI.Text.ToLower() != "update")
        {
            cmdI.Enabled = (arr[0].ToString() == "1" ? true : false);
        }
        else
        {
            cmdI.Enabled = (arr[1].ToString() == "1" ? true : false);
        }
        //cmdD.Enabled = (arr[2].ToString() == "1" ? true : false);
        arr = null;
    }


    public void controlPerm(Button cmdI, Button cmdU, Button cmdD, string perm)
    {
        char[] separator = new char[] { '|' };
        string[] arr = perm.Split(separator);
        if (cmdI.Text.ToLower() != "update")
        {
            cmdI.Enabled = (arr[0].ToString() == "1" ? true : false);
        }
        else
        {
            cmdI.Enabled = (arr[1].ToString() == "1" ? true : false);
        }
        cmdD.Enabled = (arr[2].ToString() == "1" ? true : false);
        arr = null;
    }

    public string viewAllow(string uid)
    {
        string retView = "";

        string sqlstr = "select * from AssignRoleChild where assignroleid='" + uid + "'"; //(select id from Assignroles where individualid='" + uid + "')";

        com = new SqlCommand(sqlstr, objCon.con);
        com.Connection.Open();
        SqlDataReader sdr = null;
        sdr = com.ExecuteReader();

        if (sdr.HasRows)
        {
            sdr.Read();
            retView = sdr[0].ToString() + "|" + sdr[1].ToString() + "|" + sdr[2].ToString() + "|" + sdr[3].ToString();// +"|" + sdr[4].ToString() + "|" + sdr[5].ToString();

        }
        //colValue = com.ExecuteScalar();
        sdr.Close();
        sdr.Dispose();

        com.Connection.Close();
        return retView;
    }

    public object FetchScalar(string sql)
    {
        object colValue = "";
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        colValue = com.ExecuteScalar();
        com.Connection.Close();
        return colValue;
    }

    public void FetchRecordsByTable(DataTable dTable, string sql)
    {
        da = new SqlDataAdapter(sql, objCon.con);
        da.Fill(dTable);
    }

    public SqlDataReader FetchRecordsByDataReader(SqlDataReader dr, string sql)
    {
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();
        com.Connection.Close();
        return dr;
    }

    public void CloseConnection()
    {
      //  com.Connection.Close();
    }
    public SqlDataReader FetchRecordsByDataReader(string sql)
    {
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();
        return dr;
    }

    public void CloseConnections()
    {
        dr.Close();
        com.Connection.Close();
    }
    public int ExecuteDML(string sql)
    {
        int rowInserted = 0;
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        rowInserted = com.ExecuteNonQuery();
        com.Connection.Close();
        return rowInserted;
    }
    public void FillGridVIew(DataGrid grd, string sql)
    {
        //com = new SqlCommand(sql, objCon.con);
        //com.Connection.Open();
        //dr = com.ExecuteReader();
        da = new SqlDataAdapter(sql, objCon.con);
        DataSet ds = new DataSet();
        da.Fill(ds);
        if (ds.Tables[0].Rows.Count > 0)
        {
            grd.DataSource = ds;
            grd.DataBind();
        }
        //if (dr.HasRows)
        //{
        //    grd.DataSource = dr;
        //    grd.DataBind();
        //}
        else
        {
            DataTable dt = new DataTable();
            grd.DataSource = dt;
            grd.DataBind();
            dt.Dispose();
        }
        //com.Connection.Close();
    }
    public void FillGridView(GridView grd, string sql)
    {
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        da = new SqlDataAdapter(sql, objCon.con);
        DataSet ds = new DataSet();
        try
        {
            da.Fill(ds);
            if (ds.Tables[0].Rows.Count > 0)
            {
                grd.DataSource = ds;
                grd.DataBind();
            }
        }
        finally
        {
            ds.Dispose();
            objCon.con.Close();
            objCon.con.Dispose();
            objCon.Dispose();
        }
      //  CloseConnection();
    }

    public Int16 GetRowCount(string sql)
    {
        Int16 rowCount = 0;
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        object objVal = com.ExecuteScalar();
        //Session["test"] = objVal;
        if (objVal.ToString().Trim().Equals("NULL"))
            rowCount = 0;
        else
            rowCount = Convert.ToInt16(objVal);
        com.Connection.Close();
        return rowCount;
    }
    public void FillDestination(DropDownList ddl)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillDesitination");
        try
        {

            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "Destination";
                ddl.DataValueField = "DID";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");

            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void Fillsession(DropDownList ddl, string instituteid, string batchid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "batchid", batchid, DbType.String);
        objDB.AddParameters(1, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetSession");
        try
        {
            if (dr != null)
            {

                ddl.DataSource = dr;
                ddl.DataTextField = "sessionyear";
                ddl.DataValueField = "sessionyear";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }

            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void Fillsession(DropDownList ddl, string instituteid, string batchid, string ZeroIndexVal, MasterDataDataContext msd)
    {
        ddl.Items.Clear();
        var course = from c in msd.GetSession(batchid, Int32.Parse(instituteid))
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "sessionyear";
        ddl.DataValueField = "sessionyear";
        ddl.DataBind();
        if (ZeroIndexVal != "")
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }

    }
    public void FillSubject(GridView gv, string instituteid, string Courseid)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        objDB.AddParameters(1, "Courseid", Int32.Parse(Courseid), DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "SubjectList");
        try
        {
            if (dr.Read())
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = new Int32[0];
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void FillSubject(GridView gv, string SubjectID)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "SubjectID", Int32.Parse(SubjectID), DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetTopic");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = new Int32[0];
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void FillFacultyGV(GridView gv, string instituteID, string DepartmentID, string FacultyID)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "instituteID", Int32.Parse(instituteID), DbType.Int32);
        objDB.AddParameters(1, "DepartmentID", Int32.Parse(DepartmentID), DbType.Int32);
        objDB.AddParameters(2, "FacultyID", Int32.Parse(FacultyID), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetFacultyDetail");
        try
        {
            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = new Int32[0];
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void FillSubjectddl(DropDownList ddl, string instituteid, string Courseid)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        objDB.AddParameters(1, "Courseid", Int32.Parse(Courseid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "SubjectList");
        try
        {




            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "SubjectName";
                ddl.DataValueField = "SubjectID";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public void FillDepartment(DropDownList ddl, string instituteid)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillDepartment");
        try
        {
            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "DepartmentName";
                ddl.DataValueField = "DepartmentID";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public void FillDesignation(DropDownList ddl, string instituteid)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillDesignation");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "Designation";
                ddl.DataValueField = "DesigId";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public DataTable FindStudent(string InstituteID, string SessionID, int StudentID)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "InstituteID", Int32.Parse(InstituteID), DbType.Int32);
        objDB.AddParameters(1, "Session", SessionID, DbType.String);
        objDB.AddParameters(2, "StudentID", StudentID, DbType.Int32);
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "FindStudent");
        return dt;
    }
    public void FillCity(DropDownList ddl)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillCity");
        try
        {

            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "CityName";
                ddl.DataValueField = "CityId";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public void FillCity(DropDownList ddl, MasterDataDataContext msd)
    {
        ddl.Items.Clear();

        var course = from c in msd.FillCity()
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "CityName";
        ddl.DataValueField = "CityId";
        ddl.DataBind();
        ddl.Items.Insert(0, "---Select---");
        ddl.Items[0].Value = "0";

    }
    public void FillState(DropDownList ddl)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillState");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "statename";
                ddl.DataValueField = "stateid";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    public void FillCountry(DropDownList ddl)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FillCountry");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "CountryName";
                ddl.DataValueField = "CountryId";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    public void FillTopicddlBySubjectID(DropDownList ddl, string subjectID)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "subjectID", Int32.Parse(subjectID), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetTopicBySubjectID");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "TopicName";
                ddl.DataValueField = "TopicID";
                ddl.DataBind();
                ddl.Items.Insert(0, "---Select---");
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Add("---Select---");
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    public void FillSubTopicGV(GridView gv, string Courseid, string SubjecID, string TopicID, string subTopicID)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "Courseid", Int32.Parse(Courseid), DbType.Int32);
        objDB.AddParameters(1, "TopicID", Int32.Parse(TopicID), DbType.Int32);
        objDB.AddParameters(2, "SubjectID", Int32.Parse(SubjecID), DbType.Int32);
        objDB.AddParameters(3, "SubTopicID", Int32.Parse(subTopicID), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetTopicByCondition");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = new Int32[0];
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    public void FillCourseWithChildGV(GridView gv, string Courseid, string InstituteID)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "InstituteID", Int32.Parse(InstituteID), DbType.Int32);
        objDB.AddParameters(1, "Courseid", Int32.Parse(Courseid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "CourseWithChild");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = new Int32[0];
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public void FillForSubjectImportGV(GridView gv, string CourseID, string YearID, string SemesterID, string SessionID, string Batch, string flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(6);
        objDB.AddParameters(0, "Courseid", Int32.Parse(CourseID), DbType.Int32);
        objDB.AddParameters(1, "YearID", Int32.Parse(YearID), DbType.Int32);
        objDB.AddParameters(2, "SemesterID", Int32.Parse(SemesterID), DbType.Int32);
        objDB.AddParameters(3, "SessionID", SessionID, DbType.String);
        objDB.AddParameters(4, "Batch", Batch, DbType.String);
        objDB.AddParameters(5, "flag", flag, DbType.String);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetImport_Subject");
        if (dr.Read())
        {
            gv.DataSource = dr;
            gv.DataBind();
        }
        else
        {
            gv.DataSource = new Int32[0];
            gv.DataBind();
        }
    }
    public void FillYear(DropDownList ddl, string courseid, string batchid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "CourseID", Int32.Parse(courseid), DbType.Int32);
        objDB.AddParameters(1, "Batch", batchid, DbType.String);
        objDB.AddParameters(2, "type", "Y", DbType.String);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetYear");
        try
        {
            if (dr.HasRows)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "yr";
                ddl.DataValueField = "yearid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    public void FillYear(DropDownList ddl, string courseid, string batchid, string ZeroIndexVal, MasterDataDataContext msd)
    {
        ddl.Items.Clear();

        var course = from c in msd.GetYear(Int32.Parse(courseid), batchid, "y")
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "yr";
        ddl.DataValueField = "yearid";
        ddl.DataBind();
        if (ZeroIndexVal != "")
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }

    }
    public void FillYearByBatch(DropDownList ddl, string courseid, string batchid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "CourseID", Int32.Parse(courseid), DbType.Int32);
        objDB.AddParameters(1, "Batch", batchid, DbType.String);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetYearByBatch");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "yr";
                ddl.DataValueField = "yearid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }
    //public void FillYearByBatch(DropDownList ddl, string courseid, string batchid, string ZeroIndexVal)
    //{
    //    ddl.Items.Clear();
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(2);
    //    objDB.AddParameters(0, "CourseID", Int32.Parse(courseid), DbType.Int32);
    //    objDB.AddParameters(1, "Batch", batchid, DbType.String);
    //    SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetYearByBatch");
    //    if (dr.HasRows)
    //    {
    //        ddl.DataSource = dr;
    //        ddl.DataTextField = "yr";
    //        ddl.DataValueField = "yearid";
    //        ddl.DataBind();
    //        if (ZeroIndexVal != "")
    //        {
    //            ddl.Items.Insert(0, ZeroIndexVal);
    //            ddl.Items[0].Value = "0";
    //        }
    //        else
    //        {
    //            ddl.Items.Insert(0, ZeroIndexVal);
    //            ddl.Items[0].Value = "0";
    //        }
    //    }
    //    else
    //    {
    //        ddl.Items.Insert(0, ZeroIndexVal);
    //        ddl.Items[0].Value = "0";
    //    }
    //}
    public void FillSemester(DropDownList ddl, string courseid, string SemesterID, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "CourseID", Int32.Parse(courseid), DbType.Int32);
        objDB.AddParameters(1, "Batch", SemesterID, DbType.String);
        objDB.AddParameters(2, "type", "Y", DbType.String);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetYearSem");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "Semestern";
                ddl.DataValueField = "Semesterid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillSemester(DropDownList ddl, string courseid, string SemesterID, string ZeroIndexVal, MasterDataDataContext msd)
    {
        ddl.Items.Clear();

        var course = from c in msd.GetSemester(Int32.Parse(courseid), SemesterID, Convert.ToChar(1))
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "Semestern";
        ddl.DataValueField = "Semesterid";
        ddl.DataBind();
        if (ZeroIndexVal != "")
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }

    }
    public void FillBatch(DropDownList ddl, string institute, string courseid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "instituteid", Int32.Parse(institute), DbType.Int32);
        objDB.AddParameters(1, "courseid", Int32.Parse(courseid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetCourseBatch");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "Batch";
                ddl.DataValueField = "Batch";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }
    public void FillBatchChk(CheckBoxList chk, string institute, string courseid, string ZeroIndexVal)
    {
        chk.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "instituteid", Int32.Parse(institute), DbType.Int32);
        objDB.AddParameters(1, "courseid", Int32.Parse(courseid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetCourseBatch");
        try
        {


            if (dr != null)
            {
                chk.DataSource = dr;
                chk.DataTextField = "Batchcode";
                chk.DataValueField = "Batchcode";
                chk.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }

    public void FillBatch(DropDownList ddl, string instituteid, string courseid, string ZeroIndexVal, MasterDataDataContext msd)
    {
        ddl.Items.Clear();
        var course = from c in msd.GetCourseBatch(Int32.Parse(instituteid), Int32.Parse(courseid))
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "Batchcode";
        ddl.DataValueField = "Batchcode";
        ddl.DataBind();
        if (ZeroIndexVal != "")
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }

    }
    public void FillInstitute(DropDownList ddl, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.Command.Parameters.Clear();
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetInstitute");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "collegename";
                ddl.DataValueField = "Collegeid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
        }
        finally
        {
            dr.Close();
            dr.Dispose();
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }

    }

    public void FillCourse(DropDownList ddl, string instituteid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.Command.Parameters.Clear();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "instituteid", Int32.Parse(instituteid), DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetCourse");
        try
        {
            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "coursename";
                ddl.DataValueField = "courseid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
        }
        finally
        {
            dr.Close();
            dr.Dispose();
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }

    }

    public void FillCourse(DropDownList ddl, string instituteid, string ZeroIndexVal, MasterDataDataContext msd)
    {
        ddl.Items.Clear();
        var course = from c in msd.GetCourse(Int32.Parse(instituteid))
                     select c;

        ddl.DataSource = course.ToList();
        ddl.DataTextField = "coursename";
        ddl.DataValueField = "courseid";
        ddl.DataBind();
        if (ZeroIndexVal != "")
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }

    }

    public void FillDropdownlist(DropDownList ddl, string TextFieldName, string ValueFieldName, string sql, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();
        try
        {
            if (dr.HasRows)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = TextFieldName;
                ddl.DataValueField = ValueFieldName;
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                // ddl.DataSource = dr;
                // ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
        }

        finally
        {
            dr.Close();
            dr.Dispose();
            com.Connection.Close();
            objCon.con.Dispose();
        }
    }

    public void FillListBox(ListBox ddl, string TextFieldName, string ValueFieldName, string sql, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();

        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = TextFieldName;
            ddl.DataValueField = ValueFieldName;
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.DataSource = dr;
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }

        com.Connection.Close();
    }

    public void FillCheckboxlist(CheckBoxList chk, string TextFieldName, string ValueFieldName, string sql)
    {
        chk.Items.Clear();
      
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();
        try
        {
            if (dr.HasRows)
            {
                chk.DataSource = dr;
                chk.DataTextField = TextFieldName;
                chk.DataValueField = ValueFieldName;
                chk.DataBind();

            }
        }
        finally
        {
            dr.Close();
            com.Connection.Close();
            objCon.con.Dispose();
        }

    }
    public void FillRadiolist(RadioButtonList chk, string TextFieldName, string ValueFieldName, string sql)
    {
        chk.Items.Clear();
        com = new SqlCommand(sql, objCon.con);
        com.Connection.Open();
        dr = com.ExecuteReader();

        if (dr.HasRows)
        {
            chk.DataSource = dr;
            chk.DataTextField = TextFieldName;
            chk.DataValueField = ValueFieldName;
            chk.DataBind();

        }
        com.Connection.Close();
    }
    public void FillGridVIew(GridView grd, string sql)
    {
        da = new SqlDataAdapter(sql, objCon.con);
        DataSet ds = new DataSet();
        da.Fill(ds);

        if (ds.Tables[0].Rows.Count > 0)
        {
            grd.DataSource = ds.Tables[0];
            grd.DataBind();
        }
        else
        {
            DataTable dt = new DataTable();
            grd.DataSource = dt;
            grd.DataBind();
            dt.Dispose();
        }
        CloseConnection();
    }
    public void FillGridVIew1(GridView grd, string sql)
    {
        da = new SqlDataAdapter(sql, objCon.con);
        DataSet ds = new DataSet();
        da.Fill(ds);

        if (ds.Tables[0].Rows.Count > 0)
        {
            grd.DataSource = ds.Tables[0];
            grd.DataBind();
        }
        else
        {
            DataTable dt = new DataTable();
            grd.DataSource = dt;
            grd.DataBind();
            dt.Dispose();
        }
        CloseConnection();
    }
    public void FillGrid(DataGrid dg, string sql)
    {
        da = new SqlDataAdapter(sql, objCon.con);
        DataSet ds = new DataSet();
        da.Fill(ds);

        if (ds.Tables[0].Rows.Count > 0)
        {
            dg.DataSource = ds;
            dg.DataBind();
        }
        else
        {
            ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
            dg.DataSource = ds;
            dg.DataBind();

            int columnCount = dg.Items[0].Cells.Count;
            dg.Items[0].Cells.Clear();

            dg.Items[0].Cells.Add(new TableCell());
            dg.Items[0].Cells[0].ColumnSpan = columnCount;
            dg.Items[0].Cells[0].Text = "No Records Found";

            //dg.Items[0].Cells[0].CssClass = "TextField"; 
            dg.Items[0].Cells[0].BackColor = System.Drawing.Color.WhiteSmoke;
        }
    }
    public DataTable FillDataTable(string sql)
    {
        DataTable dt = new DataTable();
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        da = new SqlDataAdapter(sql, objCon.con);
        try
        {
            da.Fill(dt);
        }
        finally
        {
            da.Dispose();
            objCon.con.Close();
            objCon.con.Dispose();
        }
   //     CloseConnection();
        return dt;
    }
    //public DataTable FillDataTable1(string sql)
    //{
    //    DataTable dt;// = new DataTable();
    //    da = new SqlDataAdapter(sql, objCon.con);
    //    da.Fill(dt);

    //    return dt;
    //}
    public void FillDataSet(DataSet ds, string sql)
    {
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        da = new SqlDataAdapter(sql, objCon.con);
        da.Fill(ds);
        da.Dispose();
        objCon.con.Close();
        objCon.con.Dispose();
    }
    public void FillDataSet1(DataSet ds, string sql)
    {
        if (objCon.con.State == ConnectionState.Closed)
        {
            objCon = new DbConnection();
        }
        SqlDataAdapter daa = new SqlDataAdapter(sql, objCon.con);
        daa.Fill(ds);
        daa.Dispose();
        objCon.con.Close();
        objCon.con.Dispose();
    }
    public string Get_details(string sql)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();

        string detail = String.Empty;
        try
        {
            SqlConnection con = new SqlConnection(objDB.ConnectionString);
            con.Open();
            SqlDataAdapter ad = new SqlDataAdapter(sql, con);
            if (ad.SelectCommand.ExecuteScalar() != null)
            {
                detail = ad.SelectCommand.ExecuteScalar().ToString();
            }
            ad.Dispose();
            con.Close();
            con.Dispose();
        }
        finally
        {
          //  objDB.DataReader.Close();
        //    objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
        return detail;

    }


    public string Get_detailsAll(string sql)
    {
        string retval = "";
        SqlDataAdapter ad = new SqlDataAdapter();
        SqlCommand cmd = new SqlCommand(sql, objCon.con);
        ad.SelectCommand = cmd;
        DataSet ds = new DataSet();
        ad.Fill(ds);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (int i = 0; i <= ds.Tables[0].Rows.Count - 1; i++)
            {
                if (retval == "")
                {
                    retval = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                }
                else
                {
                    retval = retval + "^" + ds.Tables[0].Rows[i].ItemArray[0].ToString();
                }
            }

        }
        //while (reader.Read())
        //{


        //}
        //reader.Close();
        return retval;
    }
    public string Get_detailsAll(string sql, string Opr)
    {
        string retval = "";
        SqlDataAdapter ad = new SqlDataAdapter();
        SqlCommand cmd = new SqlCommand(sql, objCon.con);
        ad.SelectCommand = cmd;
        DataSet ds = new DataSet();
        ad.Fill(ds);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (int i = 0; i <= ds.Tables[0].Rows.Count - 1; i++)
            {
                if (retval == "")
                {
                    retval = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                }
                else
                {
                    retval = retval + Opr.ToString() + ds.Tables[0].Rows[i].ItemArray[0].ToString();
                }
            }

        }
        //while (reader.Read())
        //{


        //}
        //reader.Close();
        return retval;
    }
    public Int32 GenerateID1(string strTablename, string strFldname)
    {
        com = new SqlCommand();
        com.Connection = objCon.con;
        com.Connection.Open();

        com.CommandText = "select coalesce(max(" + strFldname + "),'0',max(" + strFldname + ")) from " + strTablename;
        int ID = Convert.ToInt32(com.ExecuteScalar()) + 1;
        com.Connection.Close();

        return ID;
    }
    public string GenerateID(string strTablename, string strFldname)
    {
        com = new SqlCommand();
        com.Connection = objCon.con;
        com.Connection.Open();

        com.CommandText = "select coalesce(max(" + strFldname + "),'0',max(" + strFldname + ")) from " + strTablename;
        int ID = Convert.ToInt32(com.ExecuteScalar()) + 1;
        com.Connection.Close();
        string strID = string.Empty;
        if (ID < 10)
        {
            strID = "0" + ID.ToString();
        }
        else
        {
            strID = ID.ToString();
        }
        return strID;
    }
    public string GenerateIDByCodition(string strTablename, string strFldname, string InstId)
    {
        com = new SqlCommand();
        com.Connection = objCon.con;
        com.Connection.Open();

        com.CommandText = "select coalesce(max(" + strFldname + "),'0',max(" + strFldname + ")) from " + strTablename + " where InstituteID=" + InstId;
        int ID = Convert.ToInt32(com.ExecuteScalar()) + 1;
        com.Connection.Close();
        string strID = string.Empty;
        if (ID < 10)
        {
            strID = "0" + ID.ToString();
        }
        else
        {
            strID = ID.ToString();
        }
        return strID;
    }
    public void MsgBox(string msg, Page refP)
    {
        Label lbl = new Label();
        string lb = "window.alert('" + msg + "')";
        ScriptManager.RegisterClientScriptBlock(refP, GetType(), "UniqueKey", lb, true);
        //ScriptManager.RegisterClientScriptBlock(refP, refP.GetType, "UniqueKey", lb, True)
        refP.Controls.Add(lbl);
    }
    public void MsgBox1(string msg, UpdatePanel refP)
    {
        string lb = "window.alert('" + HttpContext.Current.Server.HtmlEncode(msg) + "');";
        ScriptManager.RegisterClientScriptBlock(refP, GetType(), "UniqueKey", lb, true);


    }

    public void FillDataSet(DataTable dataTable, string p)
    {
        throw new NotImplementedException();
    }

    //public string SelectInsideTrans(string str)
    //{
    //    string retstr = "";
    //    SqlDataAdapter adapter = new SqlDataAdapter();
    //    SqlCommand command = new SqlCommand(str, objCon.con);
    //    adapter.SelectCommand = command;
    //    DataSet ds = new DataSet();
    //    adapter.Fill(ds);
    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        retstr = ds.Tables[0].Rows[0].ItemArray[0].ToString();
    //    }
    //    else
    //    {
    //        retstr = "1";
    //    }
    //    return retstr;
    //}

    public void FillRcnoGrd(GridView grd, int inst, int cours, string sessn, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "instid", inst, DbType.Int32);
        objDB.AddParameters(1, "coursid", cours, DbType.Int32);
        objDB.AddParameters(2, "sessnid", sessn, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "RCNO_select");
        try
        {


            if (dr != null)
            {
                grd.DataSource = dr;
                grd.DataBind();
            }
            else
            {
                grd.DataSource = null;
                grd.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }

    }
    public void FillPPSNOGrd(GridView grd, int inst, string sessn, string flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "instid", inst, DbType.Int32);
        objDB.AddParameters(1, "sessnid", sessn, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.String);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "PPSNO_View");
        try
        {


            if (dr != null)
            {
                grd.DataSource = dr;
                grd.DataBind();
            }
            else
            {
                grd.DataSource = null;
                grd.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }

    }


    public void FillFeeDetailGrd(GridView grd, int DocId, int InstID, string Sessn, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
        objDB.AddParameters(1, "InstID", InstID, DbType.Int32);
        objDB.AddParameters(2, "Session", Sessn, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        try
        {


            if (dr != null)
            {
                grd.DataSource = dr;
                grd.DataBind();
            }
            else
            {
                grd.DataSource = null;
                grd.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }

    //public void FillDetailPGrd(GridView grd, int DocId, string Sessn, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(3);
    //    objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
    //    objDB.AddParameters(1, "Session", Sessn, DbType.String);
    //    objDB.AddParameters(2, "flag", flag, DbType.Int32);
    //    IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    try
    //    {


    //        if (dr != null)
    //        {
    //            grd.DataSource = dr;
    //            grd.DataBind();
    //        }
    //        else
    //        {
    //            grd.DataSource = null;
    //            grd.DataBind();
    //        }
    //    }
    //    finally
    //    {
    //        objDB.DataReader.Close();
    //        objDB.Connection.Close();
    //        objDB.Dispose();
    //    }
    //}


    //public DataTable FillDetailPGrd(int DocId, int instid, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(3);
    //    objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
    //    //objDB.AddParameters(1, "Session", Sessn, DbType.String);
    //    objDB.AddParameters(1, "InstituteID", instid, DbType.Int32);
    //    objDB.AddParameters(2, "flag", flag, DbType.Int32);
    //    //IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    return dt;
    //}


    public void FillDetailPrint(GridView grd, int DocId, string Sessn, int sid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
        objDB.AddParameters(1, "Session", Sessn, DbType.String);
        objDB.AddParameters(2, "Sid", sid, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        try
        {


            if (dr != null)
            {
                grd.DataSource = dr;
                grd.DataBind();
            }
            else
            {
                grd.DataSource = null;
                grd.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
    }


    //public DataTable FillDetailODCPrintF(int DocId, string Sessn, int sid, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(4);
    //    objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
    //    objDB.AddParameters(1, "Session", Sessn, DbType.String);
    //    objDB.AddParameters(2, "Sid", sid, DbType.Int32);
    //    objDB.AddParameters(3, "flag", flag, DbType.Int32);
    //    DataTable dt = new DataTable();
    //    //IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    try
    //    {
    //        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    }
    //    finally
    //    {
    //        objDB.Connection.Close();
    //        objDB.Dispose();
    //    }
    //    return dt;
    //}

    //public DataTable FillDetailODCPrintC(int DocId, string Sessn, int sid, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(4);
    //    objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
    //    objDB.AddParameters(1, "Session", Sessn, DbType.String);
    //    objDB.AddParameters(2, "Sid", sid, DbType.Int32);
    //    objDB.AddParameters(3, "flag", flag, DbType.Int32);
    //    DataTable dt = new DataTable();
    //    //IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    try
    //    {

            
    //        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        
    //    }
    //    finally
    //    {
    //        objDB.Connection.Close();
    //        objDB.Dispose();
    //    }
    //    return dt;
    //}


    public DataTable FillDetailODCPrint(string flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.String);
        //objDB.AddParameters(1, "Session", Sessn, DbType.String);
        //objDB.AddParameters(2, "Sid", sid, DbType.Int32);
        //objDB.AddParameters(3, "flag", flag, DbType.Int32);
        DataTable dt = new DataTable();
        //IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        try
        {
            dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
            //dt = objDB.ExecuteTable(CommandType.Text, "(Select * from View_F)Union(Select * from View_O)");

        }
        finally
        {
            objDB.Connection.Close();
            objDB.Dispose();
        }
        return dt;
    }




    public DataTable FillFeeDetailTable(int DocId, int InstID, string Sessn, int Sid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        DataTable dt = new DataTable();
        try
        {
            objDB.CreateParameters(5);
            objDB.AddParameters(0, "DocId", DocId, DbType.Int32);
            objDB.AddParameters(1, "InstID", InstID, DbType.Int32);
            objDB.AddParameters(2, "Session", Sessn, DbType.String);
            objDB.AddParameters(3, "Sid", Sid, DbType.Int32);
            objDB.AddParameters(4, "flag", flag, DbType.Int32);
            //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
            dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        }
        finally
        {
            objDB.Connection.Close();
            objDB.Connection.Dispose();
            objDB.Dispose();
        }
        return dt;
    }

    public DataTable FillRecptCancelDetail(string PrNo, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "PrNo", PrNo, DbType.String);
        objDB.AddParameters(1, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillRecptCancelDetailAll(string PrNo, int instid, string sessnid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "PrNo", PrNo, DbType.String);
        objDB.AddParameters(1, "InstituteID", instid, DbType.Int32);
        objDB.AddParameters(2, "Session", sessnid, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillChqDefaultEntry(int DDNO, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "DDNO", DDNO, DbType.Int32);
        //objDB.AddParameters(1, "PayM", PayM, DbType.String);
        objDB.AddParameters(1, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    //public string FillChqDetail(int DDNO, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(2);
    //    objDB.AddParameters(0, "DDNO", DDNO, DbType.Int32);
    //    objDB.AddParameters(1, "flag", flag, DbType.Int32);
    //    //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
    //    return dt;
    //}


    public DataTable FillFeeAdv(int StudentID, int InstituteID, string Session, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "StudentID", StudentID, DbType.Int32);
        objDB.AddParameters(1, "InstituteID", InstituteID, DbType.Int32);
        objDB.AddParameters(2, "Session", Session, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }


    public DataTable FillAdvAmt(int CourseID, int StudentID, int InstituteID, string Session, int Pid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(6);
        objDB.AddParameters(0, "CourseID", CourseID, DbType.Int32);
        objDB.AddParameters(1, "StudentID", StudentID, DbType.Int32);
        objDB.AddParameters(2, "InstituteID", InstituteID, DbType.Int32);
        objDB.AddParameters(3, "Session", Session, DbType.String);
        objDB.AddParameters(4, "Pid", Pid, DbType.Int32);
        objDB.AddParameters(5, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }


    public DataTable OdcM(int odcid, int feeid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "ODCID", odcid, DbType.Int32);
        objDB.AddParameters(1, "FeeHeadId", feeid, DbType.Int32);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }


    public DataTable OdcAmt(int odcid, int stuid, int fee, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "ODCID", odcid, DbType.Int32);
        objDB.AddParameters(1, "StudentID", stuid, DbType.Int32);
        objDB.AddParameters(2, "FeeHeadId", fee, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }


    //public DataTable FillYrSem(int courseid, string sessnid, int instid, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(4);
    //    objDB.AddParameters(0, "CourseID", courseid, DbType.Int32);
    //    objDB.AddParameters(1, "Session", sessnid, DbType.String);
    //    objDB.AddParameters(2, "InstituteID", instid, DbType.Int32);
    //    objDB.AddParameters(3, "flag", flag, DbType.Int32);
    //    SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "FeeReport_Select");
    //    return dt;
    //}

    public void FillYrSem(DropDownList ddl, int courseid, string sessnid, int instid, int flag, string ZeroIndexVal)
    {

        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "CourseID", courseid, DbType.Int32);
        objDB.AddParameters(1, "Session", sessnid, DbType.String);
        objDB.AddParameters(2, "InstituteID", instid, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FeeReport_Select");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "yr";
                ddl.DataValueField = "sid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void Fillgvexam(GridView gv, int ExamID, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "ExamID", ExamID, DbType.Int32);
        objDB.AddParameters(1, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Entrance_Exam_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }


    public void FillRoomstr(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_RoomMaster_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillVenue(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_ExamVenue_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillExamname(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "ExamName_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillSubjectName(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_ExamSubject_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillgvIssue(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_Issue_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillgvSale(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_Sale_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillgvOfffline(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_Offline_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }

    public void FillgvSeat(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "En_Seat_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }
    public void FillgvPeriod(GridView gv, int Flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "Flag", Flag, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Period_Type_Select");
        try
        {


            if (dr != null)
            {
                gv.DataSource = dr;
                gv.DataBind();
            }
            else
            {
                gv.DataSource = null;
                gv.DataBind();
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }


    public void FillYearsem(DropDownList ddl, string ctype, int courseid, string batchid, string sessnid, int instid, string ZeroIndexVal)
    {

        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "ctype", ctype, DbType.String);
        objDB.AddParameters(1, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(2, "batch", batchid, DbType.String);
        objDB.AddParameters(3, "sessn", sessnid, DbType.String);
        objDB.AddParameters(4, "instid", instid, DbType.Int32);
        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetYearSem");
        try
        {


            if (dr != null)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "yr";
                ddl.DataValueField = "sid";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.Connection.Close();
            objDB.Dispose();
        }
    }


    public DataTable FillSessionWiseRpt(int courseid, string batch, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(1, "batch", batch, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillSessionWiseRptStF(int courseid, int docid, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(1, "docid", docid, DbType.Int32);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillSessionWiseRptRD(int docid, string sessn, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "docid", docid, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillAllSessionRpt(int courseid, string batch, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(1, "batch", batch, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillAllSessionRptTemp(int courseid, int docid, int sid, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(1, "docid", docid, DbType.Int32);
        objDB.AddParameters(2, "sid", sid, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        DataTable dt = new DataTable();
        if (dt.Rows.Count > 0)
        {
            dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        }
        return dt;
    }
    public void FillFeeRptChk(CheckBoxList chk, int courseid, int instid, int flag)
    {

        chk.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "CourseID", courseid, DbType.Int32);
        objDB.AddParameters(1, "instid", instid, DbType.Int32);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FeeReport_Select");
        if (dr.HasRows)
        {
            chk.DataSource = dr;
            chk.DataTextField = "FeeHeadName";
            chk.DataValueField = "FeeHeadId";
            chk.DataBind();

        }
    }

    public void FillFeeRptChkSessn(CheckBoxList chk, int flag)
    {

        chk.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FeeReport_Select");
        if (dr.HasRows)
        {
            chk.DataSource = dr;
            chk.DataTextField = "Session";
            chk.DataValueField = "SessionID";
            chk.DataBind();

        }

    }


    public void FillFeeRptChkFee(CheckBoxList chk, int course, int flag)
    {

        chk.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);
        objDB.AddParameters(1, "CourseID", course, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FeeReport_Select");
        if (dr.HasRows)
        {
            chk.DataSource = dr;
            chk.DataTextField = "FeeHeadName";
            chk.DataValueField = "FeeHeadID";
            chk.DataBind();

        }

    }


    public void FillFeeHead(DropDownList ddl, string instid, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "instID", Int32.Parse(instid), DbType.Int32);

        IDataReader dr = (IDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "GetFeeHead");

        if (dr != null)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "FeeHeadName";
            ddl.DataValueField = "FeeHeadID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }


    public void FillPayMode(DropDownList ddl, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "PaymentMode";
            ddl.DataValueField = "PMID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }

    public void FillIBank(DropDownList ddl, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        //objDB.AddParameters(0, "bankreq", bankreq, DbType.String);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "BankName";
            ddl.DataValueField = "BankID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }


    public void FillStudentID(DropDownList ddl, int sid, int instid, string sessn, string status, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "sid", sid, DbType.Int32);
        objDB.AddParameters(1, "instid", instid, DbType.Int32);
        objDB.AddParameters(2, "session", sessn, DbType.String);
        objDB.AddParameters(3, "status", status, DbType.String);
        //objDB.AddParameters(4, "CourseID", courseid, DbType.String);
        objDB.AddParameters(4, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "ID_Student";
            ddl.DataValueField = "StudentID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }

    public void FillStudentID1(DropDownList ddl, string yrid, int instid, string sessn, string status, int courseid, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(6);
        objDB.AddParameters(0, "yearid", yrid, DbType.String);
        objDB.AddParameters(1, "instid", instid, DbType.Int32);
        objDB.AddParameters(2, "session", sessn, DbType.String);
        objDB.AddParameters(3, "status", status, DbType.String);
        objDB.AddParameters(4, "CourseID", courseid, DbType.Int32);
        objDB.AddParameters(5, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "ID_Student";
            ddl.DataValueField = "StudentID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }


    public void FillFeeStrucGrd(GridView grd, int inst, string cours, string sessn, string ctype, string flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "CourseCode", cours, DbType.String);
        objDB.AddParameters(2, "Session", sessn, DbType.String);
        objDB.AddParameters(3, "Ctype", ctype, DbType.String);
        objDB.AddParameters(4, "flag", flag, DbType.String);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Struc_Select");
        if (dr.HasRows)
        {
            grd.DataSource = dr;
            grd.DataBind();
        }
        else
        {
            grd.DataSource = null;
            grd.DataBind();
        }
    }


    public void FillFeeRpt(GridView grd, string status, string sessn, int instid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "Status", status, DbType.String);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "InstituteID", instid, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "FeeReport_Select");
        if (dr.HasRows)
        {
            grd.DataSource = dr;
            grd.DataBind();
        }
        else
        {
            grd.DataSource = null;
            grd.DataBind();
        }
    }


    public void FillRecptCancel(GridView grd, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        if (dr.HasRows)
        {
            grd.DataSource = dr;
            grd.DataBind();
        }
        else
        {
            grd.DataSource = null;
            grd.DataBind();
        }
    }


    //public void FillFeeRefundGrd(GridView grd, int inst, int cours, string sessn, int flag)
    //{
    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(4);
    //    objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
    //    objDB.AddParameters(1, "CourseID", cours, DbType.String);
    //    objDB.AddParameters(2, "Session", sessn, DbType.String);
    //    objDB.AddParameters(3, "flag", flag, DbType.String);
    //    SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    if (dr.HasRows)
    //    {
    //        grd.DataSource = dr;
    //        grd.DataBind();
    //    }
    //    else
    //    {
    //        grd.DataSource = null;
    //        grd.DataBind();
    //    }
    //}

    public DataTable FillFeeRefundGrd(int inst, int cours, string sessn, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "CourseID", cours, DbType.Int32);
        objDB.AddParameters(2, "Session", sessn, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }


    public DataTable FillPeriodWisePreFee(DateTime Fdate, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "Fdate", Fdate, DbType.DateTime);
        objDB.AddParameters(1, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillPeriodWiseCurrFee(DateTime Fdate, DateTime Tdate, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "Fdate", Fdate, DbType.DateTime);
        objDB.AddParameters(1, "Tdate", Tdate, DbType.DateTime);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }


    public DataTable FillPeriodWisePay(DateTime Fdate, DateTime Tdate, int course, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "Fdate", Fdate, DbType.DateTime);
        objDB.AddParameters(1, "Tdate", Tdate, DbType.DateTime);
        objDB.AddParameters(2, "courseid", course, DbType.Int32);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "SessionWiseRpt_Select");
        return dt;
    }

    public DataTable FillReceiptCancel(int inst, string sessn, int course, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "CourseCode", course, DbType.Int32);
        //objDB.AddParameters(3, "BatchCode", batch, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillReceiptCancelB(int inst, string sessn, int course, string batch, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "CourseCode", course, DbType.Int32);
        objDB.AddParameters(3, "BatchCode", batch, DbType.String);
        objDB.AddParameters(4, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillReceiptCancelSt(int inst, string sessn, int course, string batch, int studentID, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(6);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "CourseCode", course, DbType.Int32);
        objDB.AddParameters(3, "BatchCode", batch, DbType.String);
        objDB.AddParameters(4, "StudentID", studentID, DbType.Int32);
        objDB.AddParameters(5, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }


    public DataTable FillChqDefault(int inst, string sessn, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "InstituteID", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillChqDefaultSt(int inst, string sessn, int studentID, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "InstituteID", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(1, "StudentID", studentID, DbType.Int32);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }


    //public DataTable FillFeeRefundGrdSt(int inst, int cours, string sessn, int studentid, int flag)
    //{

    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(5);
    //    objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
    //    objDB.AddParameters(1, "CourseID", cours, DbType.Int32);
    //    objDB.AddParameters(2, "Session", sessn, DbType.String);
    //    objDB.AddParameters(3, "StudentID", studentid, DbType.Int32);
    //    objDB.AddParameters(4, "flag", flag, DbType.String);
    //    //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    return dt;
    //}



    public DataTable FillFeeRefundGrdB(int inst, int cours, string sessn, string batch, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "CourseID", cours, DbType.Int32);
        objDB.AddParameters(2, "Session", sessn, DbType.String);
        objDB.AddParameters(3, "batch", batch, DbType.String);
        objDB.AddParameters(4, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }

    public DataTable FillFeeRefundGrdP(int inst, int cours, string sessn, int pid, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "CourseID", cours, DbType.Int32);
        objDB.AddParameters(2, "Session", sessn, DbType.String);
        objDB.AddParameters(3, "Pid", pid, DbType.Int32);
        objDB.AddParameters(4, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }

    public DataTable FillFeeRefundGrdS(int inst, int cours, string sessn, int studentid, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "Instituteid", inst, DbType.Int32);
        objDB.AddParameters(1, "CourseID", cours, DbType.Int32);
        objDB.AddParameters(2, "Session", sessn, DbType.String);
        objDB.AddParameters(3, "StudentID", studentid, DbType.Int32);
        objDB.AddParameters(4, "flag", flag, DbType.String);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
        return dt;
    }



    public DataTable FillChangePayMode(string prno, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "PrNo", prno, DbType.String);
        objDB.AddParameters(1, "flag", flag, DbType.Int32);

        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillChangePMode(int inst, string sessn, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(3);
        objDB.AddParameters(0, "InstituteID", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "flag", flag, DbType.Int32);

        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }

    public DataTable FillChangePModeR(int inst, string sessn, string receipt, int flag)
    {

        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(4);
        objDB.AddParameters(0, "InstituteID", inst, DbType.Int32);
        objDB.AddParameters(1, "Session", sessn, DbType.String);
        objDB.AddParameters(2, "PrNo", receipt, DbType.String);
        objDB.AddParameters(3, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
        DataTable dt = new DataTable();
        dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        return dt;
    }


    public string GetYearForSem(int sid, string CourseYear, int courseid, string batchid, string sessnid, int instid, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(7);
        objDB.AddParameters(0, "sid", sid, DbType.Int32);
        objDB.AddParameters(1, "CourseYear", CourseYear, DbType.Int32);
        objDB.AddParameters(2, "courseid", courseid, DbType.Int32);
        objDB.AddParameters(3, "batch", batchid, DbType.Int32);
        objDB.AddParameters(4, "sessionyear", sessnid, DbType.Int32);
        objDB.AddParameters(5, "inst_id", instid, DbType.Int32);
        objDB.AddParameters(6, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Struc_Select");
        //SqlDataAdapter ad = new SqlDataAdapter();
        //SqlCommand cmd;
        //cmd = new SqlCommand(sql, objCon.con);
        //ad.SelectCommand = cmd;
        //DataSet ds = new DataSet();
        //ad.Fill(ds);
        string retval = "";
        if (dr.HasRows)
        {
            retval = dr.ToString();
        }
        else
        {
            retval = "";
        }
        return retval;

    }


    public object ODCID(int feeid, int course, int inst, string sessn, int cid, string yr, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(7);
        objDB.AddParameters(0, "FeeHeadId", feeid, DbType.Int32);
        objDB.AddParameters(1, "CourseID", course, DbType.Int32);
        objDB.AddParameters(2, "InstituteID", inst, DbType.Int32);
        objDB.AddParameters(3, "Session", sessn, DbType.String);
        objDB.AddParameters(4, "cid", cid, DbType.Int32);
        objDB.AddParameters(5, "yearid", yr, DbType.String);
        objDB.AddParameters(6, "flag", flag, DbType.Int32);
        //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");

        object retval;
        retval = objDB.ExecuteScalar(CommandType.StoredProcedure, "Fee_Deposit_Select");
        //if (dr.HasRows)
        //{
        //    retval = dr;
        //}
        //else
        //{
        //    retval = 0;
        //}
        return retval;

    }


    public void FillFeeRptGrdStd(GridView grd, int InstituteID, int flag)
    {
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(2);
        objDB.AddParameters(0, "InstituteID", InstituteID, DbType.Int32);
        objDB.AddParameters(1, "flag", flag, DbType.Int32);
        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Receipt_Cancellation_Select");
        if (dr.HasRows)
        {
            grd.DataSource = dr;
            grd.DataBind();
        }
        else
        {
            grd.DataSource = null;
            grd.DataBind();
        }
    }


    public void FillTopicType(DropDownList ddl, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Topic_Planner_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "Period_Type";
            ddl.DataValueField = "PeriodID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }


    public void FillTPBatch(DropDownList ddl, int flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(1);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Topic_Planner_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "Batch_Name";
            ddl.DataValueField = "Batch_ID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }
    public void FillTPBatch1(DropDownList ddl, int flag,int Instid,int courseid,string session,int Semester, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(5);
        objDB.AddParameters(0, "flag", flag, DbType.Int32);
        objDB.AddParameters(1, "Instituteid", Instid, DbType.Int32);
        objDB.AddParameters(2, "Courseid", courseid, DbType.Int32);
        objDB.AddParameters(3, "Session", session, DbType.String);
        objDB.AddParameters(4, "Semesterid", Semester, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Topic_Planner_Select");
        if (dr.HasRows)
        {
            ddl.DataSource = dr;
            ddl.DataTextField = "Batch_Name";
            ddl.DataValueField = "Batch_ID";
            ddl.DataBind();
            if (ZeroIndexVal != "")
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        else
        {
            ddl.Items.Insert(0, ZeroIndexVal);
            ddl.Items[0].Value = "0";
        }
    }
    public void FillStudentBatchType(DropDownList ddl, int InstituteID, string SessionID, int Course_ID, int YearID, string SemesterID, int Flag, string ZeroIndexVal)
    {
        ddl.Items.Clear();
        NewDAL.DBManager objDB = new DBManager();
        objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
        objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
        objDB.Open();
        objDB.CreateParameters(6);
        objDB.AddParameters(0, "InstituteID", InstituteID, DbType.Int32);
        objDB.AddParameters(1, "SessionID", SessionID, DbType.String);
        objDB.AddParameters(2, "Course_ID", Course_ID, DbType.Int32);
        objDB.AddParameters(3, "YearID", YearID, DbType.Int32);
        objDB.AddParameters(4, "SemesterID", SemesterID, DbType.String);
        objDB.AddParameters(5, "Flag", Flag, DbType.Int32);

        SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "SelectStuBatchType");
        try
        {
            if (dr.HasRows)
            {
                ddl.DataSource = dr;
                ddl.DataTextField = "Period_Type";
                ddl.DataValueField = "PeriodID";
                ddl.DataBind();
                if (ZeroIndexVal != "")
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
                else
                {
                    ddl.Items.Insert(0, ZeroIndexVal);
                    ddl.Items[0].Value = "0";
                }
            }
            else
            {
                ddl.Items.Insert(0, ZeroIndexVal);
                ddl.Items[0].Value = "0";
            }
        }
        finally
        {
            objDB.DataReader.Close();
            objDB.DataReader.Dispose();
            objDB.Connection.Close();
            objDB.Connection.Dispose();
        }
    }


    public String GetListBoxSelectedItem(ListBox LSTBox)
    {
        StringBuilder RepeatedShift = new StringBuilder();
        String Value = string.Empty;
        for (int i = 0; i < LSTBox.Items.Count; i++)
        {
            if (LSTBox.Items[i].Selected == true)
            {
                RepeatedShift.Append(LSTBox.Items[i].Value + ",");
            }
        }
        if (RepeatedShift.ToString() != string.Empty)
            Value = RepeatedShift.ToString().Remove(RepeatedShift.ToString().LastIndexOf(',')).ToString();

        return Value;
        //return RepeatedShift.ToString().Remove(RepeatedShift.ToString().LastIndexOf(','));
    }




    public String GetListBoxSelectedItem_Def(ListBox LSTBox)
    {
        StringBuilder RepeatedShift = new StringBuilder();
        String Value = string.Empty;
        for (int i = 0; i < LSTBox.Items.Count; i++)
        {
            if (LSTBox.Items[i].Text != "Select Forms")
            {
                RepeatedShift.Append(LSTBox.Items[i].Value + ",");
            }

        }
        if (RepeatedShift.ToString() != string.Empty)
            Value = RepeatedShift.ToString().Remove(RepeatedShift.ToString().LastIndexOf(',')).ToString();

        return Value;
        //return RepeatedShift.ToString().Remove(RepeatedShift.ToString().LastIndexOf(','));
    }

    //public DataTable FillAdv_R(int docid, int coursid, int flag)
    //{

    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(3);
    //    objDB.AddParameters(0, "studentid", docid, DbType.Int32);
    //    objDB.AddParameters(1, "CourseID", coursid, DbType.Int32);
    //    objDB.AddParameters(2, "flag", flag, DbType.Int32);
    //    //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    return dt;
    //}


    //public DataTable FillAdvRGrd(int studentid,int coursid, string flag)
    //{

    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(3);
    //    objDB.AddParameters(0, "StudentID", studentid, DbType.Int32);
    //    objDB.AddParameters(1, "CourseID", coursid, DbType.Int32);       
    //    objDB.AddParameters(2, "flag", flag, DbType.String);
    //    //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    return dt;
    //}


    //public DataTable FillAdvRcpt(string prno)
    //{

    //    NewDAL.DBManager objDB = new DBManager();
    //    objDB.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["FeesManagementConn"].ConnectionString;
    //    objDB.DBManager(DataAccessLayer.DataProvider.SqlServer, objDB.ConnectionString);
    //    objDB.Open();
    //    objDB.CreateParameters(1);
    //    objDB.AddParameters(0, "Prno", prno, DbType.String);
    //    //SqlDataReader dr = (SqlDataReader)objDB.ExecuteReader(CommandType.StoredProcedure, "Fee_Deposit_Select");
    //    DataTable dt = new DataTable();
    //    dt = objDB.ExecuteTable(CommandType.Text, "select * from Adv_Rcpt_Vw where Prno='"+prno+"'");
    //    return dt;
    //}

    //public string GetListBoxSelectedItem(ListBox LSTFormFieldData)
    //{
    //    throw new NotImplementedException();
    //}
}

